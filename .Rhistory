height = ceiling(length(plot_dr_list) / getPlotCol(length(plot_dr_list))) * 4.8,
width = getPlotCol(length(plot_dr_list)) * 5)
}
if(!is.null(total.image.name) & !is.null(savePath)){
ggsave(file.path(savePath, total.image.name),
total_plot,
dpi = 300,
height = ceiling(length(plot_list) / getPlotCol(length(plot_list))) * 4.8,
width = getPlotCol(length(plot_list)) * 4.8)
ggsave(file.path(savePath, paste0("dr_", total.image.name)),
total_dr_plot,
dpi = 300,
height = ceiling(length(plot_dr_list) / getPlotCol(length(plot_dr_list))) * 4.5,
width = getPlotCol(length(plot_dr_list)) * 5)
}
cycle.marker <- read.table(file.path(system.file(package = "stCancer"), "txt/cellCycle-genes.txt"),
header = F,
stringsAsFactors = F)
geneSets <- list()
geneSets["CellCycle"] <- as.list(cycle.marker)
results <- cellTypeScore(SeuratObject = SeuratObject,
savePath = NULL,
geneSets = geneSets,
total.image.name = NULL,
colors = c("white", "#009b45"),
...)
results <- cellTypeScore(SeuratObject = SeuratObject,
savePath = NULL,
geneSets = geneSets,
total.image.name = NULL,
colors = c("white", "#009b45"))
SeuratObject <- results$object
results.collector <- results$results
bool.completed <- results$bool.completed
if(is.null(SeuratObject@meta.data[["CellCycle"]])){
return(list(object = SeuratObject,
results = results.collector,
plots = plots.collector,
bool.completed = bool.completed))
}
p <- Spatial_Plot(SeuratObject,
"CellCycle",
discrete = F,
crop = T,
base.size = 8,
pt.size = pt.size,
colors = c("white", "#009b45"))
plots.collector[["CellCycle"]] <- p
if(!is.null(savePath)){
ggsave(file.path(savePath, "cellCycle.png"),
p,
dpi = 300,
height = 5,
width = 6)
}
p <- pointDRPlot(SeuratObject,
"CellCycle",
discrete = F,
legend.title = "score",
title = "CellCycle",
colors = c("white", "#009b45"),
point.size = 2.0)
plots.collector[["CellCycle_dr"]] <- p
if(!is.null(savePath)){
ggsave(file.path(savePath, "cellCycle_dr.png"),
p,
dpi = 300,
height = 5,
width = 6)
}
p <- pointDRPlot(SeuratObject,
"CellCycle",
discrete = F,
legend.title = "score",
title = "CellCycle",
colors = c("white", "#009b45"))
plots.collector[["CellCycle_dr"]] <- p
if(!is.null(savePath)){
ggsave(file.path(savePath, "cellCycle_dr.png"),
p,
dpi = 300,
height = 5,
width = 6)
}
p <- pointDRPlot(SeuratObject,
"CellCycle",
discrete = F,
legend.title = "score",
title = "CellCycle",
colors = c("white", "#009b45"))
plots.collector[["CellCycle_dr"]] <- p
if(!is.null(savePath)){
ggsave(file.path(savePath, "cellCycle_dr.png"),
p,
dpi = 300,
height = 5,
width = 6)
}
system.file("txt", "gene-chr-hg38.txt", package = "scCancer")
library(devtools)
document()
document()
document()
document()
document()
document()
dataPath <- "D:/data/lab_data/hcc/"
savePath <- "D:/data/lab_data/results_ttttt/hcc"
samples <- list.files(dataPath)
for(i in 1 : length(samples)){
i_dataPath <- file.path(dataPath, samples[i])
try(
results <- stStatistics(samples[[i]], i_dataPath, savePath),
silent = T
)
try(
object <- results$object,
silent = T
)
try(
results <- stAnnotation(object, savePath, bool.CNV = F, bool.interaction = F)
)
}
devtools::load_all(".")
dataPath <- "D:/data/10x_public/human"
savePath <- "D:/data/10x_public/results_final/human"
samples <- list.files(dataPath)
for(i in 1 : length(samples)){
i_dataPath <- file.path(dataPath, samples[i])
try(
results <- stStatistics(samples[[i]], i_dataPath, savePath),
silent = T
)
try(
object <- results$object,
silent = T
)
try(
results <- stAnnotation(object, savePath, bool.CNV = F)
)
}
dataPath <- "D:/data/10x_public/mouse"
savePath <- "D:/data/10x_public/results_final/mouse"
samples <- list.files(dataPath)
for(i in 1 : length(samples)){
i_dataPath <- file.path(dataPath, samples[i])
try(
results <- stStatistics(samples[[i]], i_dataPath, savePath),
silent = T
)
try(
object <- results$object,
silent = T
)
try(
results <- stAnnotation(object, savePath, bool.CNV = F)
)
}
dataPath <- "D:/data/lab_data/hcc/"
savePath <- "D:/data/lab_data/results_final/hcc"
samples <- list.files(dataPath)
for(i in 1 : length(samples)){
i_dataPath <- file.path(dataPath, samples[i])
try(
results <- stStatistics(samples[[i]], i_dataPath, savePath),
silent = T
)
try(
object <- results$object,
silent = T
)
try(
results <- stAnnotation(object, savePath, bool.CNV = F)
)
}
dataPath <- "D:/data/10x_public/mouse"
savePath <- "D:/data/10x_public/results_final/mouse"
samples <- list.files(dataPath)
i = 1
i_dataPath <- file.path(dataPath, samples[i])
results <- stStatistics(samples[[i]], i_dataPath, savePath)
object <- results$object
results <- stAnnotation(object, savePath, bool.CNV = F)
dataPath <- "D:/data/10x_public/mouse"
savePath <- "D:/data/10x_public/results_final/mouse"
samples <- list.files(dataPath)
for(i in 1 : length(samples)){
i_dataPath <- file.path(dataPath, samples[i])
try(
results <- stStatistics(samples[[i]], i_dataPath, savePath, species = "mouse"),
silent = T
)
try(
object <- results$object,
silent = T
)
try(
results <- stAnnotation(object, savePath, bool.CNV = F, bool.interaction = F, species = "mouse")
)
}
?install_github
dataPath <- "D:/data/10x_public/human"
savePath <- "D:/data/10x_public/results_final/human"
samples <- list.files(dataPath)
samples
i = 18
i_dataPath <- file.path(dataPath, samples[i])
try(
results <- stStatistics(samples[[i]], i_dataPath, savePath),
silent = T
)
classof(0.4)
class(0.4)
?>FindClusters
/FindClusters
ï¼ŸFindClusters
?FindClusters
object <- results$object
results <- stAnnotation(object, savePath, bool.CNV = F, bool.interaction = F)
dataPath <- "D:/data/10x_public/human"
savePath <- "D:/data/10x_public/results_final/human"
samples <- list.files(dataPath)
i = 18
samples
i_dataPath <- file.path(dataPath, samples[i])
results <- stStatistics(samples[[i]], i_dataPath, savePath)
devtools::load_all(".")
?stStatistic
?stStatistics
devtools::load_all(".")
dataPath <- "D:/data/brain-ST"
results <- stStatistics("test", dataPath, savePath = "D:/data/brain-ST/results", rm.isolated = F)
spatial <- results$object
results <- stAnnotation(spatial, "D:/data/brain-ST/results", bool.NMF = F, bool.CNV = F, bool.EMT = F, bool.stem = F, bool.CellType = F, bool.interaction = F, bool.CellCycle = F)
results <- stAnnotation(spatial, "D:/data/brain-ST/results", bool.NMF = F, bool.CNV = F, bool.EMT = F, bool.stem = F, bool.CellType = F, bool.interaction = F, bool.CellCycle = F, species = "mouse")
results <- stStatistics("test", dataPath, savePath = "D:/data/brain-ST/results", rm.isolated = F, species = "mouse")
spatial <- results$object
results <- stAnnotation(spatial, "D:/data/brain-ST/results", bool.NMF = F, bool.CNV = F, bool.EMT = F, bool.stem = F, bool.CellType = F, bool.interaction = F, bool.CellCycle = F, species = "mouse")
devtools::load_all(".")
cellphone.db <- readRDS(file.path(system.file(package = "stCancer"), "rds/cellphonedb.RDS"))
View(cellphone.db)
devtools::load_all(".")
dataPath <- "D:/data/bm_st/ST8_DHL/outs"
savePath <- "D:/data/bm_st/results"
library(stCancer)
results <- stStatistics("ST8",
dataPath,
savePath,
species = "mouse")
dhl <- results$object
GeneSpatialPlot(dhl,
"Cdh5")
GeneSpatialPlot(dhl,
"Pecam1")
GeneSpatialPlot(dhl,
"Cd31")
GeneSpatialPlot(dhl,
"CD31")
GeneSpatialPlot(dhl,
"Lepr")
GeneSpatialPlot(dhl,
"Rdgfra")
rownames(dhl)
GeneSpatialPlot(dhl,
"Pdgfra")
GeneSpatialPlot(dhl,
"Tcf21")
GeneSpatialPlot(dhl,
"Col1a1")
GeneSpatialPlot(dhl,
"Itga2b")
GeneSpatialPlot(dhl,
"Gp9")
GeneSpatialPlot(dhl,
"Ptprc")
GeneSpatialPlot(dhl,
"cd3e")
GeneSpatialPlot(dhl,
"Cd3e")
GeneSpatialPlot(dhl,
"Cd3")
GeneSpatialPlot(dhl,
"Cd45")
GeneSpatialPlot(dhl,
"Ly-6g")
GeneSpatialPlot(dhl,
"Ly6g")
GeneSpatialPlot(dhl,
"Ly6c")
GeneSpatialPlot(dhl,
"Ly-6c")
GeneSpatialPlot(dhl,
"ly-6c")
GeneSpatialPlot(dhl,
"ly6c")
GeneSpatialPlot(dhl,
"Kit")
scores <- cellTypeScore(dhl, geneSets = geneSet)
geneSet <- list(Endothelial = c("Cdh5", "Pecam1"),
Mesenchymal = c("Lepr", "Pdgfra",
"Tcf21"),
Osteroblast = c("Col1a1"),
Megakaryocyte = c("Itga2b", "Gp9"),
Hematopoietic = c("Ptprc"),
Tcell = c("Cd3e", "Cd3d", "Cd3g",
"Cd247"),
Bcell = c("Ptprc"),
Granulocytes = c("Ly6g", "Ly6c"),
Macrophage = c("Itgam"),
LSK = c("Ly6a", "Kit"))
scores <- cellTypeScore(dhl, geneSets = geneSet)
dhl <- SCTransform(dhl, assay = "spatial")
dhl <- SCTransform(dhl, assay = "Spatial")
scores <- cellTypeScore(dhl, geneSets = geneSet)
dhl <- SCTransform(dhl, assay = "Spatial", verbose = F)
dhl <- RunPCA(dhl, assay = dhl@active.assay, verbose = FALSE)
dhl <- FindVariableFeatures(dhl, verbose = FALSE)
dhl <- FindNeighbors(dhl, reduction = "pca", dims = 1:30, verbose = FALSE)
dhl <- FindClusters(dhl, resolution = 0.4, verbose = FALSE)
dhl <- RunUMAP(dhl, reduction = "pca", dims = 1:30, verbose = F)
dhl <- RunTSNE(dhl, reduction = "pca", dims = 1:30, verbose = F)
View(dhl)
geneSet <- list(Endothelial = c("Cdh5", "Pecam1"),
Mesenchymal = c("Lepr", "Pdgfra",
"Tcf21"),
Osteroblast = c("Col1a1"),
Megakaryocyte = c("Itga2b", "Gp9"),
Hematopoietic = c("Ptprc"),
Tcell = c("Cd3e", "Cd3d", "Cd3g",
"Cd247"),
Bcell = c("Ptprc"),
Granulocytes = c("Ly6g", "Ly6c"),
Macrophage = c("Itgam"),
LSK = c("Ly6a", "Kit"))
scores <- cellTypeScore(dhl, geneSets = geneSet)
View(dhl)
scores <- cellTypeScore(dhl,
savePath = "D:/data/bm_st/results/ST8/celltype",
geneSets = geneSet,
reduction.func = "umap")
dhl <- RunTSNE(dhl, reduction = "pca", dims = 1:30, verbose = F)
View(dhl)
length(unique(rownames(dhl)))
length(unique(colnames(dhl)))
sampleName <- "ST5"
dataPath <- paste0("D:/data/bm_st/", sampleName, "_DHL/outs")
savePath <- "D:/data/bm_st/results"
library(stCancer)
results <- stStatistics(sampleName,
dataPath,
savePath,
species = "mouse")
dhl <- results$object
dhl <- SCTransform(dhl, assay = "Spatial", verbose = F)
dhl <- RunPCA(dhl, assay = dhl@active.assay, verbose = FALSE)
dhl <- FindVariableFeatures(dhl, verbose = FALSE)
dhl <- FindNeighbors(dhl, reduction = "pca", dims = 1:30, verbose = FALSE)
dhl <- FindClusters(dhl, resolution = 0.4, verbose = FALSE)
dhl <- RunUMAP(dhl, reduction = "pca", dims = 1:30, verbose = F)
dhl <- RunTSNE(dhl, reduction = "pca", dims = 1:30, verbose = F)
# results <- stAnnotation(dhl,
#                         savePath,
#                         rm.ig = F,
#                         bool.CellType = F,
#                         bool.CNV = F,
#                         bool.interaction = F,
#                         bool.EMT = F,
#                         bool.CellCycle = F,
#                         bool.stem = F)
# dhl <- results$object
geneSet <- list(Endothelial = c("Cdh5", "Pecam1"),
Mesenchymal = c("Lepr", "Pdgfra",
"Tcf21"),
Osteroblast = c("Col1a1"),
Megakaryocyte = c("Itga2b", "Gp9"),
Hematopoietic = c("Ptprc"),
Tcell = c("Cd3e", "Cd3d", "Cd3g",
"Cd247"),
Bcell = c("Ptprc"),
Granulocytes = c("Ly6g", "Ly6c"),
Macrophage = c("Itgam"),
LSK = c("Ly6a", "Kit"))
scores <- cellTypeScore(dhl,
savePath = paste0("D:/data/bm_st/results/", sampleName, "/celltype"),
geneSets = geneSet)
#
#
# GeneSpatialPlot(dhl,
#                 "Kit")
sampleName <- "ST6"
sampleName <- "ST6"
dataPath <- paste0("D:/data/bm_st/", sampleName, "_DHL/outs")
savePath <- "D:/data/bm_st/results"
library(stCancer)
results <- stStatistics(sampleName,
dataPath,
savePath,
species = "mouse")
dhl <- results$object
dhl <- SCTransform(dhl, assay = "Spatial", verbose = F)
dhl <- RunPCA(dhl, assay = dhl@active.assay, verbose = FALSE)
dhl <- FindVariableFeatures(dhl, verbose = FALSE)
dhl <- FindNeighbors(dhl, reduction = "pca", dims = 1:30, verbose = FALSE)
dhl <- FindClusters(dhl, resolution = 0.4, verbose = FALSE)
dhl <- RunUMAP(dhl, reduction = "pca", dims = 1:30, verbose = F)
dhl <- RunTSNE(dhl, reduction = "pca", dims = 1:30, verbose = F)
# results <- stAnnotation(dhl,
#                         savePath,
#                         rm.ig = F,
#                         bool.CellType = F,
#                         bool.CNV = F,
#                         bool.interaction = F,
#                         bool.EMT = F,
#                         bool.CellCycle = F,
#                         bool.stem = F)
# dhl <- results$object
geneSet <- list(Endothelial = c("Cdh5", "Pecam1"),
Mesenchymal = c("Lepr", "Pdgfra",
"Tcf21"),
Osteroblast = c("Col1a1"),
Megakaryocyte = c("Itga2b", "Gp9"),
Hematopoietic = c("Ptprc"),
Tcell = c("Cd3e", "Cd3d", "Cd3g",
"Cd247"),
Bcell = c("Ptprc"),
Granulocytes = c("Ly6g", "Ly6c"),
Macrophage = c("Itgam"),
LSK = c("Ly6a", "Kit"))
scores <- cellTypeScore(dhl,
savePath = paste0("D:/data/bm_st/results/", sampleName, "/celltype"),
geneSets = geneSet)
#
#
# GeneSpatialPlot(dhl,
#                 "Kit")
sampleName <- "ST7"
dataPath <- paste0("D:/data/bm_st/", sampleName, "_DHL/outs")
savePath <- "D:/data/bm_st/results"
library(stCancer)
results <- stStatistics(sampleName,
dataPath,
savePath,
species = "mouse")
dhl <- results$object
dhl <- SCTransform(dhl, assay = "Spatial", verbose = F)
dhl <- RunPCA(dhl, assay = dhl@active.assay, verbose = FALSE)
dhl <- FindVariableFeatures(dhl, verbose = FALSE)
dhl <- FindNeighbors(dhl, reduction = "pca", dims = 1:30, verbose = FALSE)
dhl <- FindClusters(dhl, resolution = 0.4, verbose = FALSE)
dhl <- RunUMAP(dhl, reduction = "pca", dims = 1:30, verbose = F)
dhl <- RunTSNE(dhl, reduction = "pca", dims = 1:30, verbose = F)
# results <- stAnnotation(dhl,
#                         savePath,
#                         rm.ig = F,
#                         bool.CellType = F,
#                         bool.CNV = F,
#                         bool.interaction = F,
#                         bool.EMT = F,
#                         bool.CellCycle = F,
#                         bool.stem = F)
# dhl <- results$object
geneSet <- list(Endothelial = c("Cdh5", "Pecam1"),
Mesenchymal = c("Lepr", "Pdgfra",
"Tcf21"),
Osteroblast = c("Col1a1"),
Megakaryocyte = c("Itga2b", "Gp9"),
Hematopoietic = c("Ptprc"),
Tcell = c("Cd3e", "Cd3d", "Cd3g",
"Cd247"),
Bcell = c("Ptprc"),
Granulocytes = c("Ly6g", "Ly6c"),
Macrophage = c("Itgam"),
LSK = c("Ly6a", "Kit"))
scores <- cellTypeScore(dhl,
savePath = paste0("D:/data/bm_st/results/", sampleName, "/celltype"),
geneSets = geneSet)
#
#
# GeneSpatialPlot(dhl,
#                 "Kit")
sampleName <- "ST8"
dataPath <- paste0("D:/data/bm_st/", sampleName, "_DHL/outs")
savePath <- "D:/data/bm_st/results"
library(stCancer)
results <- stStatistics(sampleName,
dataPath,
savePath,
species = "mouse")
dhl <- results$object
dhl <- SCTransform(dhl, assay = "Spatial", verbose = F)
dhl <- RunPCA(dhl, assay = dhl@active.assay, verbose = FALSE)
dhl <- FindVariableFeatures(dhl, verbose = FALSE)
dhl <- FindNeighbors(dhl, reduction = "pca", dims = 1:30, verbose = FALSE)
dhl <- FindClusters(dhl, resolution = 0.4, verbose = FALSE)
dhl <- RunUMAP(dhl, reduction = "pca", dims = 1:30, verbose = F)
dhl <- RunTSNE(dhl, reduction = "pca", dims = 1:30, verbose = F)
dhl <- RunTSNE(dhl, reduction = "pca", dims = 1:30, verbose = F, check_duplicates = FALSE)
geneSet <- list(Endothelial = c("Cdh5", "Pecam1"),
Mesenchymal = c("Lepr", "Pdgfra",
"Tcf21"),
Osteroblast = c("Col1a1"),
Megakaryocyte = c("Itga2b", "Gp9"),
Hematopoietic = c("Ptprc"),
Tcell = c("Cd3e", "Cd3d", "Cd3g",
"Cd247"),
Bcell = c("Ptprc"),
Granulocytes = c("Ly6g", "Ly6c"),
Macrophage = c("Itgam"),
LSK = c("Ly6a", "Kit"))
scores <- cellTypeScore(dhl,
savePath = paste0("D:/data/bm_st/results/", sampleName, "/celltype"),
geneSets = geneSet)
